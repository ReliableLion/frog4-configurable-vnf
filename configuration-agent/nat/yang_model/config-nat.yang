module config-nat { 
	namespace "http://netgroup.ipv6.polito.it/vnf"; 
	prefix "nat"; 
	import ietf-inet-types { 
		prefix inet; 
	} 
	description "Nat configuration";

    container interfaces {
		description "name='Interfaces'";
		list ifEntry{
		    description "name='Interface'";
		    key "id";
		    min-elements 2;
		    max-elements 3;
		    advertise onchange;
			leaf id{
				description "name='ID'";
				type string;
				advertise ondemand;
			}		    
			leaf name {
				description "name='Name'";
				type string;
				advertise ondemand;
			}
			leaf type{
			    description "name='Type'";
			    type enumeration {
                        enum L3;
                        enum transparent;
                        enum not_defined;
    			}
    			advertise ondemand;
			}
			leaf management{
			    description "name='Management privileges'";
			    type boolean;
			    mandatory false;
			    advertise ondemand;
			}
			container ipv4_configuration{
			    presence "it contains ipv4 configuration";
			    advertise onchange;
			    leaf configurationType{
			        description "name='Configuration type'";
			        type enumeration {
                        enum dhcp;
                        enum static;
                        enum not_defined;
    				}
    				advertise ondemand;
			    }
			    leaf address{
			        description "name='IP address";
			        type inet:ipv4-address;
			        mandatory false;
			        advertise ondemand;
			    }
			    leaf netmask{
			        description "name='Netmask";
			        type inet:ip-address;
			        mandatory false;
			        advertise ondemand;
			    }
			    leaf mac-address{
                    description "name='MAC Address'";
                    type string;
                    mandatory false;
                    advertise ondemand;
			    }
			    leaf default_gw{
			        description "name='Default gateway";
			        type inet:ipv4-address;
			        mandatory false;
			        advertise ondemand;
			    }
			}
			container ipv6_configuration{
			    presence "it contains ipv6 configuration";
			    advertise onchange;
			    leaf configurationType{
			        description "name='Configuration type'";
			        type enumeration {
                        enum dhcp;
                        enum static;
                        enum not_defined;
    				}
    				advertise ondemand;
			    }
			    leaf address{
			        description "name='IP address";
			        type inet:ipv6-address;
			        mandatory false;
			        advertise ondemand;
			    }
			    leaf netmask{
			        description "name='Netmask";
			        type inet:ip-address;
			        mandatory false;
			        advertise ondemand;
			    }
			    leaf default_gw{
			        description "name='Default gateway";
			        type inet:ipv6-address;
			        mandatory false;
			        advertise ondemand;
			    }
			}
		}
     }

	container nat{
		description "name='Nat";
		leaf private-interface {
		    description "name='Private Interface";
		    type leafref {
			    path "/interfaces/ifEntry/id";
		    }
		    advertise ondemand;
		}
		leaf public-interface {
		    description "name='Public Interface";
		    type leafref {
			    path "/interfaces/ifEntry/id";
		    }
		    advertise ondemand;
		}
		container nat-table{
		    description "name='Nat Table'";
		    advertise periodic;
		    period 1000;
		    list nat-session {
			    description "name='Nat Session'";
                advertise onchange;
                leaf protocol {
                    description "name='Protocol'";
                    type enumeration {
                    enum ICMP;
                    enum TCP;
                    enum UDP;
                    }
                    advertise ondemand;
                }
                leaf src_address {
                    description "name='Source Address'";
                    type inet:ip-address;
                    advertise ondemand;
                }
                leaf src_port {
                    description "name='Source Port'";
                    type string;
                    advertise ondemand;
                }
                leaf dst_address {
                    description "name='Destination address'";
                    type inet:ip-address;
                    advertise ondemand;
                }
                leaf dst_port {
                    description "name='Destination port'";
                    type string;
                    advertise ondemand;
                }
                leaf translated_address {
                    description "name='Translated address'";
                    type inet:ip-address;
                    advertise ondemand;
                }
                leaf translated_port {
                        description "name='Destination port'";
                    type string;
                    advertise ondemand;
                }
                leaf tcp_state {
                    description "name='TCP state'";
                    type enumeration {
                    enum NONE;
                    enum SYN_SENT;
                    enum SYN_RECV;
                    enum ESTABLISHED;
                    enum FIN_WAIT;
                    enum CLOSE_WAIT;
                    enum LAST_ACK;
                    enum TIME_WAIT;
                    enum CLOSE;
                    enum LISTEN;
                    }
                    mandatory false;
                    advertise ondemand;
                }
		    }
		}
		container arp-table{
		    description "name='ARP table'";
		    list arp-entry{
                description "name='ARP entry'";
                key "ip_address";
                leaf ip_address{
                    description "name='IP address'";
                    type inet:ip-address;
                }
                leaf mac_address{
                    description "name='MAC address'";
                    type string;
                }
		    }
		}
		}
		list floatingIP {
		    description "name='Floating IP'";
		    key "public_address";
		    leaf private_address {
                description "name='Private address'";
                type inet:ip-address;
		    }
		    leaf public_address {
                description "name='Public address'";
                type inet:ip-address;
		    }
		}
}
